# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Geyser Build Branch

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Build with Release'
        required: true
        default: 'Build'
      home:
        description: 'location'
        required: false

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: submodules-init
      uses: snickerbockers/submodules-init@v4

    - name: Build with Maven
      run: mvn -B -U package

    - name: Archive artifacts (Geyser Standalone)
      uses: actions/upload-artifact@v2
      if: success()
      with:
          name: Geyser Standalone
          path: bootstrap/standalone/target/Geyser.jar
    - name: Archive artifacts (Geyser Spigot)
      uses: actions/upload-artifact@v2
      if: success()
      with:
          name: Geyser Spigot
          path: bootstrap/spigot/target/Geyser-Spigot.jar
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: v${{ github.run_number }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset 1
      id: upload-release-asset-1
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: bootstrap/standalone/target/Geyser.jar
        asset_name: Geyser.jar
        asset_content_type: application/zip

    - name: Upload Release Asset 2
      id: upload-release-asset-2
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: bootstrap/spigot/target/Geyser-Spigot.jar
        asset_name: Geyser-Spigot.jar
        asset_content_type: application/zip
